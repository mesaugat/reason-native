(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{119:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return p}));var a=t(1),l=t(6),r=(t(0),t(122)),o={id:"api",title:"Pastel API",sidebar_label:"API"},c={id:"pastel/api",title:"Pastel API",description:"> Prefer reading code? Check out [Pastel.rei](https://github.com/facebookexperimental/reason-native/blob/master/src/pastel/Pastel.rei)",source:"@site/../docs/pastel/api.md",permalink:"/reason-native/docs/pastel/api",sidebar_label:"API",sidebar:"docs",previous:{title:"Pastel Quickstart",permalink:"/reason-native/docs/pastel/quickstart"},next:{title:"Pastel Console",permalink:"/reason-native/docs/pastel/console"}},b=[{value:"Available Props",id:"available-props",children:[{value:"<code>color=Color</code>",id:"colorcolor",children:[]},{value:"<code>backgroundColor=Color</code>",id:"backgroundcolorcolor",children:[]},{value:"<code>bold=Boolean</code>",id:"boldboolean",children:[]},{value:"<code>dim=Boolean</code>",id:"dimboolean",children:[]},{value:"<code>italic=Boolean</code>",id:"italicboolean",children:[]},{value:"<code>underline=Boolean</code>",id:"underlineboolean",children:[]},{value:"<code>inverse=Boolean</code>",id:"inverseboolean",children:[]},{value:"<code>hidden=Boolean</code>",id:"hiddenboolean",children:[]},{value:"<code>strikethrough=Boolean</code>",id:"strikethroughboolean",children:[]}]},{value:"Modes",id:"modes",children:[]}],i={rightToc:b},s="wrapper";function p(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(r.b)(s,Object(a.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Prefer reading code? Check out ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/facebookexperimental/reason-native/blob/master/src/pastel/Pastel.rei"}),"Pastel.rei"))),Object(r.b)("p",null,"All text formatting is accomplished through the ",Object(r.b)("inlineCode",{parentName:"p"},"<Pastel [props] />")," tag."),Object(r.b)("h2",{id:"available-props"},"Available Props"),Object(r.b)("h3",{id:"colorcolor"},Object(r.b)("inlineCode",{parentName:"h3"},"color=Color")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"color")," prop specifies the color of the contained text. It can be any of the 16 ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit"}),"4-bit ANSI colors"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"color =\n  | Black\n  | Red\n  | Green\n  | Yellow\n  | Blue\n  | Magenta\n  | Cyan\n  | White\n  | BlackBright\n  | RedBright\n  | GreenBright\n  | YellowBright\n  | BlueBright\n  | MagentaBright\n  | CyanBright\n  | WhiteBright;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  Pastel.(\n    <Pastel color=Blue> "Hello World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"\x1b[34mHello World\x1b[39m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"backgroundcolorcolor"},Object(r.b)("inlineCode",{parentName:"h3"},"backgroundColor=Color")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"backgroundColor")," prop specifies the color of the contained text. It can be any of the 16 ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit"}),"4-bit ANSI colors"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"backgroundColor =\n  | Black\n  | Red\n  | Green\n  | Yellow\n  | Blue\n  | Magenta\n  | Cyan\n  | White\n  | BlackBright\n  | RedBright\n  | GreenBright\n  | YellowBright\n  | BlueBright\n  | MagentaBright\n  | CyanBright\n  | WhiteBright;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  Pastel.(\n    <Pastel backgroundColor=Blue> "Hello World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"\x1b[44mHello World\x1b[49m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"boldboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"bold=Boolean")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"bold")," prop specifies if Pastel should bold the text:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"bold =\n  | true\n  | false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  "Hello " ++\n  Pastel.(\n    <Pastel bold=true> "World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Hello \x1b[1mWorld\x1b[22m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"dimboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"dim=Boolean")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"dim")," prop specifies if Pastel should dim the text:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"dim =\n  | true\n  | false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  "Hello " ++\n  Pastel.(\n    <Pastel dim=true> "World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Hello \x1b[90mWorld\x1b[39m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"italicboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"italic=Boolean")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"italic")," prop specifies if Pastel should italicize the text:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"italic =\n  | true\n  | false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  "Hello " ++\n  Pastel.(\n    <Pastel italic=true> "World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Hello \x1b[3mWorld\x1b[23m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"underlineboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"underline=Boolean")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"underline")," prop specifies if Pastel should underline the text:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"underline =\n  | true\n  | false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  "Hello " ++\n  Pastel.(\n    <Pastel underline=true> "World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Hello \x1b[4mWorld\x1b[24m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"inverseboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"inverse=Boolean")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"inverse")," prop specifies if Pastel should invert the text:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"inverse =\n  | true\n  | false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  "Hello " ++\n  Pastel.(\n    <Pastel inverse=true> "World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Hello \x1b[30m\x1b[107mWorld\x1b[49m\x1b[39m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"hiddenboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"hidden=Boolean")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"hidden")," prop specifies if Pastel should hide the text:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"hidden =\n  | true\n  | false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  "Hello " ++\n  Pastel.(\n    <Pastel hidden=true> "World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Hello \x1b[8mWorld\x1b[28m\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"strikethroughboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"strikethrough=Boolean")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"strikethrough")," prop specifies if Pastel should strike-through the text:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"strikethrough =\n  | true\n  | false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'print_endline(\n  "Hello " ++\n  Pastel.(\n    <Pastel strikethrough=true> "World" </Pastel>\n  )\n);\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Hello \x1b[9mWorld\x1b[29m\n")),Object(r.b)("h2",{id:"modes"},"Modes"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'type mode =\n  /* uses ANSI escape sequences to achieve lovely terminal coloring */\n  | Terminal\n  /* Useful for snapshots\n  ex: <Pastel color=Red>"My text"</Pastel> => <red>My text</red> */\n  | HumanReadable\n  /* no coloring */\n  | Disabled\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"/* returns the current mode */\nlet getMode: unit => mode;\n/* sets the current mode (use with caution, prefer useMode) */\nlet setMode: mode => unit;\n/* returns the default inferred mode */\nlet defaultMode: mode;\n/* uses the specified mode for the duration of the passed in function\nand then restores the previous mode after execution has completed */\nlet useMode: (mode, unit => 'a) => 'a;\n")))}p.isMDXComponent=!0},122:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),l=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=l.a.createContext({}),s=function(e){var n=l.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},p=function(e){var n=s(e.components);return l.a.createElement(i.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return l.a.createElement(l.a.Fragment,{},n)}},O=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,i=b(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,O=p["".concat(o,".").concat(d)]||p[d]||u[d]||r;return t?l.a.createElement(O,c({ref:n},i,{components:t})):l.a.createElement(O,c({ref:n},i))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=O;var c={};for(var b in n)hasOwnProperty.call(n,b)&&(c[b]=n[b]);c.originalType=e,c[d]="string"==typeof e?e:a,o[1]=c;for(var i=2;i<r;i++)o[i]=t[i];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,t)}O.displayName="MDXCreateElement"}}]);