(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(6),l=(n(0),n(122)),o={id:"getting-started",title:"Getting Started"},c={id:"getting-started",title:"Getting Started",description:"## Install Esy",source:"@site/../docs/getting-started.md",permalink:"/reason-native/docs/getting-started",sidebar:"docs",previous:{title:"Native Reason Basics",permalink:"/reason-native/docs/native-basics"},next:{title:"Rely Introduction",permalink:"/reason-native/docs/rely/introduction"}},i=[{value:"Install Esy",id:"install-esy",children:[]},{value:"Create a fresh project",id:"create-a-fresh-project",children:[]},{value:"Run your first app",id:"run-your-first-app",children:[{value:"Pastel",id:"pastel",children:[]},{value:"Console",id:"console",children:[]}]}],s={rightToc:i},b="wrapper";function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)(b,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"install-esy"},"Install Esy"),Object(l.b)("p",null,"We recommend using ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://esy.sh"}),"Esy")," as your package manager in native Reason projects. Esy is a native, npm-esque package manager with built-in dependency isolation and fast, incremental builds."),Object(l.b)("p",null,"The easiest way to install ",Object(l.b)("strong",{parentName:"p"},"Esy")," is with ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org"}),"npm"),":"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install -g esy\n")),Object(l.b)("h2",{id:"create-a-fresh-project"},"Create a fresh project"),Object(l.b)("p",null,"First, clone a copy of the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/esy-ocaml/hello-reason.git"}),Object(l.b)("inlineCode",{parentName:"a"},"esy-ocaml/hello-reason"))," project:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/esy-ocaml/hello-reason.git\ncd hello-reason\n")),Object(l.b)("p",null,"Then, run ",Object(l.b)("inlineCode",{parentName:"p"},"esy")," to install relevant dependencies and build your app:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"esy\n")),Object(l.b)("h2",{id:"run-your-first-app"},"Run your first app"),Object(l.b)("p",null,"Run"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"esy x Hello.exe # runs Hello.exe\n")),Object(l.b)("p",null,"If everything went as expected, you should see the following output:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Running Test Program:\n\x1b[31mHello\x1b[39m, \x1b[32mWorld\x1b[39m!\n")),Object(l.b)("p",null,"Believe it or not, you're already using two Reason Native packages!"),Object(l.b)("h3",{id:"pastel"},"Pastel"),Object(l.b)("p",null,"Open up ",Object(l.b)("inlineCode",{parentName:"p"},"lib/Util.re")," and you might see something interesting:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'/* lib/Util.re */\nlet hello = () =>\n  Pastel.(\n    <Pastel>\n      <Pastel color=Red> "Hello" </Pastel>\n      ", "\n      <Pastel color=Green> "World" </Pastel>\n      "!"\n    </Pastel>\n  );\n')),Object(l.b)("p",null,Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"./pastel/index.md"}),"Pastel")," is a React-like text formatting library for the terminal; one of its core features is the ability to format console text with ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/ANSI_escape_code#Colors"}),"ANSI Escape Codes"),"."),Object(l.b)("p",null,"Let's try making ",Object(l.b)("inlineCode",{parentName:"p"},"Hello")," yellow:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'/* lib/Util.re */\n/* ... */\n    <Pastel>\n      <Pastel color=Yellow> "Hello" </Pastel>\n      ", "\n/* ... */\n')),Object(l.b)("p",null,"Run ",Object(l.b)("inlineCode",{parentName:"p"},"esy build")," to rebuild your app, and run ",Object(l.b)("inlineCode",{parentName:"p"},"esy x Hello.exe")," to see your changes:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"Running Test Program:\n\x1b[33mHello\x1b[39m, \x1b[32mWorld\x1b[39m!\n")),Object(l.b)("h3",{id:"console"},"Console"),Object(l.b)("p",null,"Similarly, let's take a look at ",Object(l.b)("inlineCode",{parentName:"p"},"bin/Hello.re"),":"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),'/* bin/Hello.re */\nConsole.log("Running Test Program:");\nlet () = print_endline(Lib.Util.hello());\n')),Object(l.b)("p",null,"The ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"console/index.md"}),"Console")," package allows you to log nearly anything without having to define any printers. Let's try logging a nested tuple:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-reason"}),"/* bin/Hello.re */\nConsole.log((1, (2, 3)));\nlet () = print_endline(Lib.Util.hello());\n")),Object(l.b)("p",null,"Running ",Object(l.b)("inlineCode",{parentName:"p"},"esy build && esy x Hello.exe")," should produce the following:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash-ansi"}),"\x1b[33mHello\x1b[39m, \x1b[32mWorld\x1b[39m!\n")))}p.isMDXComponent=!0},122:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||l;return n?r.a.createElement(m,c({ref:t},s,{components:n})):r.a.createElement(m,c({ref:t},s))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<l;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);